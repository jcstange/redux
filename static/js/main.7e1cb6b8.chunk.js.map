{"version":3,"sources":["actions.ts","reducers.tsx","store.tsx","App.tsx","index.tsx"],"names":["INCREMENT","DECREMENT","initialState","type","number","store","createStore","state","action","applyMiddleware","thunk","App","useSelector","console","log","styles","app","display","button","borderWidth","borderColor","backgroundColor","padding","dispatch","useDispatch","style","onClick","increment","decrement","ReactDOM","render","document","getElementById"],"mappings":"oKACaA,EAAY,YACZC,EAAY,YCGzB,IAAMC,EAAgC,CAClCC,KAAM,eACNC,OAAQ,G,OCFCC,EAETC,aDE4B,WAGV,IAFlBC,EAEiB,uDAFOL,EACxBM,EACiB,uCACjB,OAAQA,EAAOL,MACX,KAAKH,EACD,OAAO,2BAAIO,GAAX,IAAkBJ,KAAMH,EAAWI,OAAQG,EAAMH,OAAS,IAC9D,KAAKH,EACD,OAAO,2BAAIM,GAAX,IAAkBJ,KAAMF,EAAWG,OAAQG,EAAMH,OAAS,IAElE,OAAOG,ICVPE,YAAgBC,M,OCJPC,EAAiB,WAC1B,IAAMP,EAAiBQ,aAAY,SAACL,GAAD,OAA0BA,EAAMH,UACnES,QAAQC,IAAIF,aAAY,SAACL,GAAD,OAA2BA,EAAMJ,SACzD,IAAMY,EAAS,CACXC,IAAK,CACDC,QAAS,QAEbC,OAAQ,CACJC,YAAa,EACbC,YAAY,OACZC,gBAAiB,UACjBC,QAAS,KAGXC,EAA0BC,cAChC,OAAO,sBAAKC,MAAOV,EAAOC,IAAnB,UACH,qBAAKS,MAAK,2BAAOV,EAAOG,QAAd,IAAsBG,gBAAiB,YAAjD,SAA8DjB,IAC9D,qBACIqB,MAAQV,EAAOG,OACfQ,QAAS,WACLH,EHrBT,SAAmBnB,GACtB,IAAMI,EAA0B,CAC5BL,KAAMH,EACNI,OAAQA,GAGZ,OADAS,QAAQC,IAAR,gBAAqBN,EAAOL,OACrBK,EGecmB,CAAUvB,KAH3B,uBAOA,qBACIqB,MAAK,2BAAOV,EAAOG,QAAd,IAAsBG,gBAAiB,YAC5CK,QAAS,WACLH,EHnBT,SAAmBnB,GACtB,IAAMI,EAA0B,CAC5BL,KAAMF,EACNG,OAAQA,GAGZ,OADAS,QAAQC,IAAR,gBAAqBN,EAAOL,OACrBK,EGacoB,CAAUxB,KAH3B,2BCvBRyB,IAASC,OACN,cAAC,IAAD,CAAUzB,MAAOA,EAAjB,SACK,cAAC,EAAD,MAEJ0B,SAASC,eAAe,W","file":"static/js/main.7e1cb6b8.chunk.js","sourcesContent":["\nexport const INCREMENT = \"INCREMENT\"\nexport const DECREMENT = \"DECREMENT\"\n\nexport function increment(number: number) {\n    const action: IncrementAction = {\n        type: INCREMENT,\n        number: number\n    }\n    console.log(`type: ${action.type}`)\n    return action\n}\n\nexport function decrement(number: number) {\n    const action: IncrementAction = {\n        type: DECREMENT,\n        number: number\n    }\n    console.log(`type: ${action.type}`)\n    return action\n}\n","import { \n    INCREMENT, \n    DECREMENT \n} from \"./actions\";\n\nconst initialState : IncrementState = {\n    type: 'InitialState',\n    number: 0\n}\nexport const incrementReducer = (\n    state: IncrementState = initialState,\n    action: IncrementAction\n): IncrementState => {\n    switch (action.type) {\n        case INCREMENT:\n            return {...state, type: INCREMENT, number: state.number + 1}\n        case DECREMENT:\n            return {...state, type: DECREMENT, number: state.number - 1}\n    }\n    return state\n}","import { createStore, Store, applyMiddleware } from 'redux'\nimport { incrementReducer } from './reducers'\nimport thunk from 'redux-thunk'\n\n\nexport const store : Store<IncrementState, IncrementAction> & { \n    dispatch: DispatchType \n} = createStore(\n    incrementReducer,\n    applyMiddleware(thunk)\n)\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { increment, decrement } from './actions'\n\nexport const App : React.FC = () => {\n    const number: number = useSelector((state:IncrementState) => state.number)\n    console.log(useSelector((state: IncrementState) => state.type))\n    const styles = {\n        app: {\n            display: \"flex\"\n        },\n        button: {\n            borderWidth: 3,\n            borderColor:'#000',\n            backgroundColor: '#00FF00',\n            padding: 10,\n        }\n    }\n    const dispatch: Dispatch<any> = useDispatch()\n    return <div style={styles.app}>\n        <div style= {{...styles.button, backgroundColor: '#9999FF'}}>{number}</div>\n        <div \n            style= {styles.button} \n            onClick={() => {\n                dispatch(increment(number))\n            }}>\n                Increment\n            </div>\n        <div \n            style= {{...styles.button, backgroundColor: '#FF0000'}} \n            onClick={() => {\n                dispatch(decrement(number))\n            }}>\n                Decrement\n            </div>\n        </div>\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport { App } from './App'\n\nReactDOM.render(\n   <Provider store={store}>\n        <App />\n   </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}